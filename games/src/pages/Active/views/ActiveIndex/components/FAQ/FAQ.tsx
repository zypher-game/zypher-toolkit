import { ActivePixelButton, ActivePixelButtonColor, ActivePixelCard, PixelBorderCard } from '@ui/src'
import { isEqual } from 'lodash'
import React, { memo, useCallback, useState } from 'react'

import { faqPath } from '../../config/config'
import Title from '../comp/Title'
import css from './FAQ.module.styl'
interface IItem {
  title: string
  label: string
}
const list: IItem[] = [
  {
    title: 'How to get an invitation code?',
    label: `<p>An invitation code is a string that can be used to sign up for the application. It is generated by the administrator and can be used multiple times. An application can have multiple invitation codes.</p>
<p>Participate in the Asset Planet event to get CR hero blind boxes, participate in the game.</p>
<p>Detail please check:<a href='zypher.game'> zypher.game</a></p>`
  },
  {
    title: 'How to successfully register?',
    label: `<p>An invitation code is a string that can be used to sign up for the application. It is generated by the administrator and can be used multiple times. An application can have multiple invitation codes.</p>
<p>Participate in the Asset Planet event to get CR hero blind boxes, participate in the game.</p>
<p>Detail please check:<a href='zypher.game'> zypher.game</a></p>`
  },
  {
    title: 'How to get airdrop points?',
    label: `<p>An invitation code is a string that can be used to sign up for the application. It is generated by the administrator and can be used multiple times. An application can have multiple invitation codes.</p>
<p>Participate in the Asset Planet event to get CR hero blind boxes, participate in the game.</p>
<p>Detail please check:<a href='zypher.game'> zypher.game</a></p>`
  },
  {
    title: 'What is SBT? What is its function?',
    label: `<p>An invitation code is a string that can be used to sign up for the application. It is generated by the administrator and can be used multiple times. An application can have multiple invitation codes.</p>
<p>Participate in the Asset Planet event to get CR hero blind boxes, participate in the game.</p>
<p>Detail please check:<a href='zypher.game'> zypher.game</a></p>`
  },
  {
    title: 'What is group play?',
    label: `<p>An invitation code is a string that can be used to sign up for the application. It is generated by the administrator and can be used multiple times. An application can have multiple invitation codes.</p>
<p>Participate in the Asset Planet event to get CR hero blind boxes, participate in the game.</p>
<p>Detail please check:<a href='zypher.game'> zypher.game</a></p>`
  }
]
const FAQ = memo(() => {
  const [choseIndex, setChoseIndex] = useState(0)
  const clickHandle = useCallback((index: number) => {
    setChoseIndex(index)
  }, [])
  return (
    <div className={css.faq}>
      <Title label="FAQ" />
      <div className={css.faq_inner}>
        <div className={css.fl}>
          {list.map((v, index) => (
            <Item key={v.title} item={v} choseIndex={choseIndex} index={index} onClick={() => clickHandle(index)} />
          ))}
        </div>
        <div className={css.fr}>
          <ActivePixelButtonColor themeType="brightBlue" className={`${css.link_btn}`} width={'180px'} height={'60px'} pixel_height={4}>
            <p>{'More >'}</p>
          </ActivePixelButtonColor>
          <img src={faqPath + '/img.png'} />
        </div>
      </div>
    </div>
  )
}, isEqual)
const Item = memo(({ item, choseIndex, index, onClick }: { item: IItem; choseIndex: number; index: number; onClick: any }) => {
  return (
    <ActivePixelCard className={css.item} pixel_height={4} backgroundColor="#1D263B">
      <div className={css.col1}>
        <img src={faqPath + '/qa.png'} />
      </div>
      <div className={`${css.col2} ${choseIndex === index ? css.col2_on : ''}`}>
        <h2>{item.title}</h2>
        {choseIndex === index ? <div className={css.item_text} dangerouslySetInnerHTML={{ __html: item.label }} /> : null}
      </div>
      {choseIndex === index ? (
        <div className={css.btn} />
      ) : (
        <ActivePixelButton backgroundColor="#000" pixel_height={4} className={css.btn} onClick={onClick}>
          <div className={css.pic} />
          {/* <img src={faqPath + '/arr_white.png'} /> */}
        </ActivePixelButton>
      )}
    </ActivePixelCard>
  )
}, isEqual)
export default FAQ
